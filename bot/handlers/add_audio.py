import os
from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text

from bot import keyboards
from bot.keyboards.buttons import create_keyboard_category
from bot.loader import dp, bot, db
from bot.logger import logger
from bot.states import AddAudio
from bot.support import get_current_time, on_error
from aiogram.dispatcher.filters.builtin import Command

group_id = os.getenv("GROUP_LOGS_ID")
try:

    @dp.message_handler(Text(equals="–û—Ç–º–µ–Ω–∞", ignore_case=True), state="*")
    async def cancel_handler(message: types.Message, state: FSMContext):
        logger.info(f"–ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ {message.text} –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞—É–¥–∏–æ")
        await bot.send_message(group_id,
                               f"{get_current_time()}\n{message.from_user.id}\n–ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ {message.text} –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞—É–¥–∏–æ")
        await state.finish()
        await bot.send_message(message.chat.id, "–¢—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é", reply_markup=keyboards.main_menu)


    @dp.message_handler(text=["–ó–∞–≥—Ä—É–∑–∏—Ç—å ‚¨á", "–ó–∞–≥—Ä—É–∑–∏—Ç—å", "–∑–∞–≥—Ä—É–∑–∏—Ç—å", "/download"])
    async def add_name(message: types.message):
        logger.info(f"–ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ {message.text} –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞—É–¥–∏–æ")
        await bot.send_message(group_id,
                               f"{get_current_time()}\n{message.from_user.id}\n–ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ {message.text} –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞—É–¥–∏–æ")
        await AddAudio.name.set()
        await bot.send_message(
            message.chat.id,
            "–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ",
            reply_markup=keyboards.cancel_markup,
            parse_mode=types.ParseMode.MARKDOWN,
        )


    @dp.message_handler(state=AddAudio.name)
    async def name_add(message: types.Message, state: FSMContext):
        logger.info("–ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞—É–¥–∏–æ")
        await bot.send_message(group_id,
                               f"{get_current_time()}\n{message.from_user.id}\n–ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞—É–¥–∏–æ")
        result = db.check_name(message.text.rstrip().lstrip())
        if result:
            logger.info("–í—ã–±—Ä–∞–Ω–æ –∏–º—è –∫–æ—Ç–æ—Ä–æ–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            await bot.send_message(group_id,
                                   f"{get_current_time()}\n{message.from_user.id}\n–í—ã–±—Ä–∞–Ω–æ –∏–º—è –∫–æ—Ç–æ—Ä–æ–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:{message.text}")

            await bot.send_message(
                message.chat.id, f"–ò–º—è {message.text} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\n–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –¥—Ä—É–≥–æ–µ",
                reply_markup=keyboards.cancel_markup)
            await AddAudio.name.set()

        else:
            logger.info("–í—ã–±—Ä–∞–Ω–æ –∏–º—è ")
            await bot.send_message(group_id,
                                   f"{get_current_time()}\n{message.from_user.id}\n–í—ã–±—Ä–∞–Ω–æ –∏–º—è:{message.text}")
            await AddAudio.next()
            async with state.proxy() as data:
                data["name"] = message.text
            await bot.send_message(
                message.chat.id,
                "–ò–º—è –¥–æ–±–∞–≤–ª–µ–Ω–æ,—Ç–µ–ø–µ—Ä—å –¥–æ–±–∞–≤—å—Ç–µ –∞—É–¥–∏–æ\n–ù–∞–∂–º–∏ –Ω–∞ –∑–Ω–∞—á–æ–∫ —Å–∫—Ä–µ–ø–æ—á–∫–∏ üìé,\n—á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª",
                reply_markup=keyboards.cancel_markup)


    @dp.message_handler(state=AddAudio.start, content_types=types.ContentType.AUDIO)
    async def handle_audio(message: types.Message, state: FSMContext):
        logger.info("–ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞—É–¥–∏–æ")
        await bot.send_message(group_id,
                               f"{get_current_time()}\n{message.from_user.id}\n–ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞—É–¥–∏–æ")

        async with state.proxy() as data:
            name = data["name"]
            data["params"] = []
        audio = message.audio
        file_id = audio.file_id
        file = await bot.get_file(file_id)

        audio_path = os.path.join("src", f'audio_{name}.mp3')
        audio_data = await file.download(audio_path)
        await AddAudio.next()
        await bot.send_message(
            message.chat.id,
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å—å! \n–¢–µ–ø–µ—Ä—å –¥–æ–±–∞–≤—å –ø–∞—Ä–∞–º–µ—Ç—Ä\n–ù–∞–ø–∏—à–∏ –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä –∏ –¥–æ–∂–¥–∏—Å—å —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –º–µ–Ω—è",
            reply_markup=create_keyboard_category(db.read_category()))
        async with state.proxy() as data:
            data["file"] = audio_path


    @dp.message_handler(state=AddAudio.param_1)
    async def param_add(message: types.Message, state: FSMContext):
        logger.info("–ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞—É–¥–∏–æ")
        await bot.send_message(group_id,
                               f"{get_current_time()}\n{message.from_user.id}\n–ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞—É–¥–∏–æ:{message.text}")
        async with state.proxy() as data:
            data["params"].append(message.text)
        await bot.send_message(
            message.chat.id, "–ü–∞—Ä–∞–º–µ—Ç—Ä –¥–æ–±–∞–≤–ª–µ–Ω,—Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ, –∏–ª–∏ –∑–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤?",
            reply_markup=keyboards.intermediate_keyboard)

        await AddAudio.next()


    @dp.message_handler(state=AddAudio.param_2)
    async def param_add(message: types.Message, state: FSMContext):
        logger.info("–ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞—É–¥–∏–æ")
        await bot.send_message(group_id,
                               f"{get_current_time()}\n{message.from_user.id}\n–ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞—É–¥–∏–æ")
        if message.text == "–î–æ–±–∞–≤–∏—Ç—å –µ—â—ë":
            logger.info(f"–ù–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É {message.text} –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞—É–¥–∏–æ")
            await bot.send_message(group_id,
                                   f"{get_current_time()}\n{message.from_user.id}\n–ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ {message.text} –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞—É–¥–∏–æ")

            await AddAudio.param_1.set()
            await bot.send_message(
                message.chat.id, "–î–æ–±–∞–≤—å –ø–∞—Ä–∞–º–µ—Ç—Ä\n–ù–∞–ø–∏—à–∏ –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä –∏ –¥–æ–∂–¥–∏—Å—å —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –º–µ–Ω—è",
                reply_markup=create_keyboard_category(db.read_category()))
        elif message.text == "–ó–∞–∫–æ–Ω—á–∏—Ç—å":
            logger.info(f"–ù–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É {message.text} –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞—É–¥–∏–æ")
            await bot.send_message(group_id,
                                   f"{get_current_time()}\n{message.from_user.id}\n–ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ {message.text} –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞—É–¥–∏–æ")

            result = {}
            async with state.proxy() as data:
                result['name'] = data['name']
                result['params'] = data['params']
                result['file'] = data['file']
            db.append_to_json(result)
            await state.finish()
            await bot.send_message(
                message.chat.id, "–ê—É–¥–∏–æ–∑–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ üéµ",
                reply_markup=keyboards.main_menu)
            await bot.send_message(group_id,
                                   f"{get_current_time()}\n{message.from_user.id}\n–ê—É–¥–∏–æ–∑–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞")

except Exception as error:
    on_error("–¥–æ–±–∞–≤–ª–µ–Ω–∏–∏", error)
